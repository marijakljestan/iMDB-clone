version: "3.8"
services:
  cinematic_backend:
    build: 
      context: ./
      dockerfile: Dockerfile
      target: ${TARGET:-cinematicBackendRuntime}
    container_name: cinematic
    restart: on-failure
    ports:
      - 8088:8080
    environment:
      CINEMATIC_SERVICE_PORT: ${CINEMATIC_SERVICE_PORT}
      CINEMATIC_DB_URL: ${CINEMATIC_DB_URL}
      CINEMATIC_DB_USER: ${CINEMATIC_DB_USER}
      CINEMATIC_DB_PASSWORD: ${CINEMATIC_DB_PASSWORD}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    depends_on: 
      - cinematic_db
    networks:
      - cinematic
    
  cinematic_db:
    image: postgres:14.1
    container_name: cinematic_db
    restart: always
    environment:
       POSTGRES_USER: ${CINEMATIC_DB_USER}
       POSTGRES_PASSWORD: ${CINEMATIC_DB_PASSWORD}
       POSTGRES_DB: ${CINEMATIC_DB_NAME}
       POSTGRES_HOST: ${CINEMATIC_DB_HOST}
    networks:
      - cinematic   

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: marijakljestan@gmail.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped    
    networks:
      - cinematic

networks:
  cinematic:
    name: cinematic 